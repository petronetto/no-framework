version: '2'
services:
#---------------------------------------------
# API container
#---------------------------------------------
  hellofresh.api:
    container_name: hellofresh.api
    build: .
    restart: unless-stopped
    volumes:
      - ./:/app
      - ./sock:/sock
      - ./log/php:/var/log/php
      - ./log/xdebug:/var/log/xdebug
      - ./log/newrelic:/var/log/newrelic
    links:
      - hellofresh.postgres
      - hellofresh.mongodb
      - hellofresh.redis
    env_file:
      - .env
    networks:
      - hello
#---------------------------------------------
# NGINX Container
#---------------------------------------------
  hellofresh.nginx:
    container_name: hellofresh.nginx
    build: ./docker/nginx
    restart: unless-stopped
    links:
      - hellofresh.api
    volumes:
      - ./:/app
      - ./sock:/sock
      - ./log/nginx:/var/log/nginx
    ports:
      - 8080:8080
    networks:
      - hello
#---------------------------------------------
# Postgres Container
#---------------------------------------------
  hellofresh.postgres:
    container_name: hellofresh.postgres
    image: onjin/alpine-postgres:9.5
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      LC_ALL: C.UTF-8
      POSTGRES_USER: hellofresh
      POSTGRES_PASSWORD: hellofresh
      POSTGRES_DB: hellofresh
    networks:
      - hello
#---------------------------------------------
# MongoDB Container
#---------------------------------------------
  hellofresh.mongodb:
    container_name: hellofresh.mongodb
    image: mvertes/alpine-mongo:3.2.3
    restart: unless-stopped
    ports:
      - 27017:27017
    networks:
      - hello
#---------------------------------------------
# Redis Container
#---------------------------------------------
  hellofresh.redis:
    container_name: hellofresh.redis
    image: sickp/alpine-redis:3.2.2
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - ./sock:/sock
    networks:
      - hello
#-------------------------------------------------------
# Swagger Container
#-------------------------------------------------------
  hellofresh.swagger:
    container_name: hellofresh.swagger
    image: swaggerapi/swagger-ui
    restart: unless-stopped
    ports:
      - 3000:8080
    environment:
      SWAGGER_JSON: "/data/swagger.json"
    links:
      - hellofresh.api
    networks:
      - hello
    volumes:
      - ./swagger.json:/data/swagger.json
#-------------------------------------------------------
# SonarQube Container
#-------------------------------------------------------
  hellofresh.sonarqube:
    container_name: hellofresh.sonarqube
    image: petronetto/sonarqube-alpine
    restart: unless-stopped
    ports:
      - 9000:9000
    networks:
      - hello
    volumes:
      - ./:/app
      - ./sonar-runner.properties:/opt/sonar-scanner/conf/sonar-runner.properties
      - ./sonar.properties:/opt/sonarqube/conf/sonar.properties
#-------------------------------------------------------
# Networks
#-------------------------------------------------------
networks:
  hello:
    external: true